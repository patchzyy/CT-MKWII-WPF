<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks">
    
    <SolidColorBrush x:Key="Checkbox-CheckedColor" Color="{StaticResource Cyan400}" />
    <SolidColorBrush x:Key="Checkbox-InnerWhite" Color="{StaticResource Gray50}" />
    <SolidColorBrush x:Key="Checkbox-Background" Color="{StaticResource Gray950}" />
    <SolidColorBrush x:Key="Checkbox-BorderColor" Color="{StaticResource Gray500}" />
    
    <SolidColorBrush x:Key="CheckboxDisabled-CheckedColor" Color="{StaticResource Gray700}" />
    <SolidColorBrush x:Key="CheckboxDisabled-InnerWhite" Color="{StaticResource Gray500}" />
    <SolidColorBrush x:Key="CheckboxDisabled-Background" Color="{StaticResource Gray900}" />
    <SolidColorBrush x:Key="CheckboxDisabled-BorderColor" Color="{StaticResource Gray700}" />
    
    <!-- note that switches use the Checkbox colors unless other required, those are below here -->
    <SolidColorBrush x:Key="SwitchDisabled-Background" Color="{StaticResource Gray800}" />
    <SolidColorBrush x:Key="Switch-Background" Color="{StaticResource Gray700}" />
    <SolidColorBrush x:Key="Switch-Hover" Color="{StaticResource Gray500}" />
    <SolidColorBrush x:Key="SwitchDark-BackgroundHover" Color="{StaticResource Gray900}" />
    
    <!-- ============ -->
    <!--   CHECKBOX   -->
    <!-- ============ -->
     <Style TargetType="CheckBox">
         <!-- setting the contents attributes, but will be overwritten inside the checkbox itself -->
         <Setter Property="FontSize" Value="14"/>
         <Setter Property="FontWeight" Value="Bold"/>
         <Setter Property="Foreground" Value="{StaticResource FormFieldLabelColor}" />
         
         <Setter Property="Background" Value="{StaticResource Checkbox-Background}"/>
         <Setter Property="BorderBrush" Value="{StaticResource Checkbox-BorderColor}"/>
         
         <Setter Property="Template">
             <Setter.Value>
                 <ControlTemplate TargetType="CheckBox">
                     <StackPanel Orientation="Horizontal">
                         
                         <!-- The border is wrapped inside an outerBorder without the border
                            This is to ensure that even if there is a funky pixel gap in between the inner part and outer stroke of the border, 
                            that it will just be filled in with the same background color as the inside -->
                         <Border Width="24" Height="24" 
                                 Background="{TemplateBinding Background}"
                                 CornerRadius="{StaticResource GlobalCornerRadius}">
                            <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="3"
                                    CornerRadius="{StaticResource GlobalCornerRadius}">
                               <icon:PackIconMaterial HorizontalAlignment="Center" VerticalAlignment="Center"
                                   x:Name="CheckMark" Kind="CheckBold" Visibility="Collapsed"
                                                      Foreground="{StaticResource Checkbox-InnerWhite}"/>
                            </Border>
                         </Border>
                         <ContentPresenter 
                             VerticalAlignment="Center"
                             Margin="5,0,0,0"
                             RecognizesAccessKey="True"/>
                     </StackPanel>
                     <ControlTemplate.Triggers>
                         <Trigger Property="IsChecked" Value="True">
                             <Setter Property="Background" Value="{StaticResource Checkbox-CheckedColor}"/>
                             <Setter Property="BorderBrush" Value="{StaticResource Checkbox-CheckedColor}"/>
                             <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                         </Trigger>
                         <Trigger Property="IsMouseOver" Value="True">
                             <Setter Property="BorderBrush" Value="{StaticResource Checkbox-CheckedColor}"/>
                             <Setter Property="Cursor" Value="Hand"/>
                         </Trigger>
                         
                         <!-- Disabled -->
                         <MultiTrigger>
                             <MultiTrigger.Conditions>
                                 <Condition Property="IsEnabled" Value="False"/>
                                 <Condition Property="IsChecked" Value="False"/>
                             </MultiTrigger.Conditions>
                             <Setter Property="BorderBrush" Value="{StaticResource CheckboxDisabled-BorderColor}"/>
                             <Setter Property="Background" Value="{StaticResource CheckboxDisabled-Background}"/>
                         </MultiTrigger>
                    
                         <MultiTrigger>
                             <MultiTrigger.Conditions>
                                 <Condition Property="IsEnabled" Value="False"/>
                                 <Condition Property="IsChecked" Value="True"/>
                             </MultiTrigger.Conditions>
                             <Setter Property="BorderBrush" Value="{StaticResource CheckboxDisabled-CheckedColor}"/>
                             <Setter Property="Background" Value="{StaticResource CheckboxDisabled-CheckedColor}"/>
                             <Setter TargetName="CheckMark" Property="Foreground" Value="{StaticResource CheckboxDisabled-InnerWhite}"/>
                         </MultiTrigger>
                     </ControlTemplate.Triggers>
                 </ControlTemplate>
             </Setter.Value>
         </Setter>
     </Style>
    
    <!-- ============ -->
    <!--    SWITCH    -->
    <!-- ============ -->
    <Style TargetType="CheckBox"  x:Key="Switch">
         <!-- setting the contents attributes, but will be overwritten inside the checkbox itself -->
         <Setter Property="FontSize" Value="14"/>
         <Setter Property="FontWeight" Value="Bold"/>
         <Setter Property="Foreground" Value="{StaticResource FormFieldLabelColor}" />
         
         <Setter Property="Background" Value="{StaticResource Switch-Background}"/>
         
         <Setter Property="Template">
             <Setter.Value>
                 <ControlTemplate TargetType="CheckBox">
                     <StackPanel Orientation="Horizontal">
                         <Border Width="42" Height="24"
                                 Background="{TemplateBinding Background}"
                                 BorderThickness="0"
                                 CornerRadius="13">
                             <Ellipse Width="18" Height="18" x:Name="SwitchNob"
                                      Margin="3,0" HorizontalAlignment="Left"
                                      Fill="{StaticResource Checkbox-InnerWhite}" VerticalAlignment="Center"/>
                         </Border>
                         <ContentPresenter 
                             VerticalAlignment="Center"
                             Margin="5,0,0,0"
                             RecognizesAccessKey="True"/>
                     </StackPanel>
                     <ControlTemplate.Triggers>
                         <Trigger Property="IsMouseOver" Value="True">
                             <Setter Property="Background" Value="{StaticResource Switch-Hover}"/>
                             <Setter Property="Cursor" Value="Hand"/>
                         </Trigger>
                         
                         <Trigger Property="IsChecked" Value="True">
                             <Setter TargetName="SwitchNob" Property="HorizontalAlignment" Value="Right"/>
                             <Setter Property="Background" Value="{StaticResource Checkbox-CheckedColor}"/>
                         </Trigger>
                       
                         <!-- Disabled -->
                         <MultiTrigger>
                             <MultiTrigger.Conditions>
                                 <Condition Property="IsEnabled" Value="False"/>
                                 <Condition Property="IsChecked" Value="False"/>
                             </MultiTrigger.Conditions>
                             <Setter Property="Background" Value="{StaticResource CheckboxDisabled-Background}"/>
                             <Setter TargetName="SwitchNob" Property="Fill" Value="{StaticResource CheckboxDisabled-InnerWhite}"/>
                         </MultiTrigger>
                    
                         <MultiTrigger>
                             <MultiTrigger.Conditions>
                                 <Condition Property="IsEnabled" Value="False"/>
                                 <Condition Property="IsChecked" Value="True"/>
                             </MultiTrigger.Conditions>
                             <Setter Property="Background" Value="{StaticResource CheckboxDisabled-CheckedColor}"/>
                             <Setter TargetName="SwitchNob" Property="Fill" Value="{StaticResource CheckboxDisabled-InnerWhite}"/>
                         </MultiTrigger>
                     </ControlTemplate.Triggers>
                 </ControlTemplate>
             </Setter.Value>
         </Setter>
     </Style>
    
    
    <!-- ============ -->
    <!--  SWITCH DARK -->
    <!-- ============ -->
    <Style TargetType="CheckBox"  x:Key="SwitchDark">
         <!-- setting the contents attributes, but will be overwritten inside the checkbox itself -->
         <Setter Property="FontSize" Value="14"/>
         <Setter Property="FontWeight" Value="Bold"/>
         <Setter Property="Foreground" Value="{StaticResource FormFieldLabelColor}" />
         
         <Setter Property="Background" Value="{StaticResource Checkbox-Background}"/>
         
         <Setter Property="Template">
             <Setter.Value>
                 <ControlTemplate TargetType="CheckBox">
                     <StackPanel Orientation="Horizontal">
                         <Border Width="42" Height="24"
                                 Background="{TemplateBinding Background}"
                                 BorderThickness="0"
                                 CornerRadius="13">
                             <Ellipse Width="18" Height="18" x:Name="SwitchNob"
                                      Margin="3,0" HorizontalAlignment="Left"
                                      Fill="{StaticResource Checkbox-InnerWhite}" VerticalAlignment="Center"/>
                         </Border>
                         <ContentPresenter 
                             VerticalAlignment="Center"
                             Margin="5,0,0,0"
                             RecognizesAccessKey="True"/>
                     </StackPanel>
                     <ControlTemplate.Triggers>
                         <Trigger Property="IsMouseOver" Value="True">
                             <Setter Property="Background" Value="{StaticResource SwitchDark-BackgroundHover}"/>
                             <Setter Property="Cursor" Value="Hand"/>
                         </Trigger>
                         
                         <Trigger Property="IsChecked" Value="True">
                             <Setter TargetName="SwitchNob" Property="HorizontalAlignment" Value="Right"/>
                             <Setter Property="Background" Value="{StaticResource Checkbox-CheckedColor}"/>
                         </Trigger>
                       
                         <!-- Disabled -->
                         <MultiTrigger>
                             <MultiTrigger.Conditions>
                                 <Condition Property="IsEnabled" Value="False"/>
                                 <Condition Property="IsChecked" Value="False"/>
                             </MultiTrigger.Conditions>
                             <Setter Property="Background" Value="{StaticResource CheckboxDisabled-Background}"/>
                             <Setter TargetName="SwitchNob" Property="Fill" Value="{StaticResource CheckboxDisabled-InnerWhite}"/>
                         </MultiTrigger>
                    
                         <MultiTrigger>
                             <MultiTrigger.Conditions>
                                 <Condition Property="IsEnabled" Value="False"/>
                                 <Condition Property="IsChecked" Value="True"/>
                             </MultiTrigger.Conditions>
                             <Setter Property="Background" Value="{StaticResource CheckboxDisabled-CheckedColor}"/>
                             <Setter TargetName="SwitchNob" Property="Fill" Value="{StaticResource CheckboxDisabled-InnerWhite}"/>
                         </MultiTrigger>
                     </ControlTemplate.Triggers>
                 </ControlTemplate>
             </Setter.Value>
         </Setter>
     </Style>
    
    <!-- ============ -->
    <!-- RADIO BUTTON -->
    <!-- ============ -->
     <Style TargetType="RadioButton">
        <!-- setting the contents attributes, but will be overwritten inside the radio button itself -->
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource FormFieldLabelColor}" />

        <Setter Property="Background" Value="{StaticResource Checkbox-Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Checkbox-BorderColor}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <StackPanel Orientation="Horizontal">
                        
                        <!-- The border is wrapped inside an outerBorder without the border
                            This is to ensure that even if there is a funky pixel gap in between the inner part and outer stroke of the border, 
                            that it will just be filled in with the same background color as the inside -->
                        <Border Width="24" Height="24"  Background="{TemplateBinding Background}"
                                CornerRadius="1000">
                            <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="3"
                                    CornerRadius="1000">
                                <Ellipse Width="11" Height="11"
                                         Fill="{StaticResource Checkbox-InnerWhite}"
                                         HorizontalAlignment="Center" VerticalAlignment="Center"
                                         x:Name="CheckDot" Visibility="Collapsed"/>
                            </Border>
                        </Border>
                        <ContentPresenter 
                            VerticalAlignment="Center"
                            Margin="5,0,0,0"
                            RecognizesAccessKey="True"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{StaticResource Checkbox-CheckedColor}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Checkbox-CheckedColor}"/>
                            <Setter TargetName="CheckDot" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource Checkbox-CheckedColor}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>

                        <!-- Disabled -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource CheckboxDisabled-BorderColor}"/>
                            <Setter Property="Background" Value="{StaticResource CheckboxDisabled-Background}"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource CheckboxDisabled-CheckedColor}"/>
                            <Setter Property="Background" Value="{StaticResource CheckboxDisabled-CheckedColor}"/>
                            <Setter TargetName="CheckDot" Property="Fill" Value="{StaticResource CheckboxDisabled-InnerWhite}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>